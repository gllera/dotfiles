#!/bin/bash -e

unset CLIENT_ID SESSION_ID SESSION CLIENT QUIT SESSION_DOWN

while getopts "c:s:q" opt; do
   case ${opt} in
      q) QUIT=1             ;;
      c) CLIENT_ID=$OPTARG  ;;
      s) SESSION_ID=$OPTARG ;;
   esac
done

shift $((OPTIND-1))
FILE="$@"



ask() {
   FIFO=/tmp/kak-launcher
   MSG="echo -to-file $FIFO $1"

   [[ -n "$2" ]] && MSG="eval -client $2 %{ $MSG }"

   rm -f $FIFO
   mkfifo -m 600 $FIFO
   unset RES

   echo $MSG | kak -p $SESSION

   for i in {0..5}; do
      [[ -e $FIFO ]] && RES=$(cat $FIFO) && break
      sleep .01
   done
}




if [[ -n "$SESSION_ID" ]]; then
   SESSIONS=( $(kak -l) )

   [[ "$SESSION_ID" == "l" ]] && printf '%s\n' "${SESSIONS[@]}" && exit

   SESSION=${SESSIONS[SESSION_ID]}

   [[ -z "$SESSION" ]] && echo "Session not found" >&2 && exit 1
else
   SESSION=$( [[ -n "$TMUX" ]] && tmux display-message -p '#{session_id}-#{window_id}' 2> /dev/null || echo 'main' )
   SESSION=${SESSION/$/}
   SESSION=${SESSION/@/}
   SESSION_DOWN=$( kak -l | grep -Fwq $SESSION || echo 1 )
fi



if ((QUIT)); then
   echo "kill" | kak -p $SESSION
   kak -clear
   exit
fi



if [[ -n "$CLIENT_ID" ]]; then
   ((SESSION_DOWN)) && echo "Session Down. Client not found" >&2 && exit 1

   ask "%val{client_list}"
   CLIENTS=( $(echo $RES) )

   [[ "$CLIENT_ID" == "l" ]] && printf '%s\n' "${CLIENTS[@]}" && exit
   CLIENT=${CLIENTS[CLIENT_ID]}
   [[ -z "$CLIENT" ]] && echo "Client not found" >&2 && exit 1

   unset RES
   [[ -n "$TMUX" ]] && ask "%val{client_env_TMUX_PANE}" $CLIENT
   PANE=$RES
fi



((SESSION_DOWN)) && kak -d -s $SESSION &

if [[ -n "$CLIENT" ]]; then
   echo "reuse-create-client $CLIENT '$(realpath "$FILE")'" | kak -p $SESSION
   [[ -n "$PANE" ]] && tmux select-pane -t "$PANE"
else
   exec kak -c $SESSION "$FILE"
fi
