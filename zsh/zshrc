#!/bin/zsh

# If not running interactively, don't do anything
[[ $- != *i* ]] && return



#### Configs
# Basics
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:-$HOME/.cache}

typeset -gxU path=(
   "."
   "$HOME/.local/bin"
   "$XDG_CONFIG_HOME/scripts"
   "$path[@]"
)



# nnn
export NNN_OPENER=${NNN_OPENER:-scope}
export GUI=1



#### Zsh
# History
HISTSIZE=10000
SAVEHIST=10000
HISTFILE="$HOME/.zsh_history"

# Prompt
setopt PROMPT_SUBST
setopt INC_APPEND_HISTORY
autoload -U select-word-style

select-word-style bash

PROMPT="%F{blue}%n@%m %F{green}%~ \$(prompt_git_status)%f$ "

prompt_git_status() {
   local BRANCH="$( git rev-parse --abbrev-ref HEAD 2>/dev/null )"
   local STATUS="%F{yellow}"
    
   if [[ -n "$BRANCH" ]]; then
      git diff --quiet --ignore-submodules HEAD 2>/dev/null || STATUS="%F{red}"
      printf '%b' "$STATUS($BRANCH) "
   fi
}

# Plugins
fzf-history-widget() {
   local RES=$( fc -rln 1 | perl -ne 'print if !$seen{$_}++' | fzf --height=11 --tiebreak=index --info=hidden --reverse --query=${LBUFFER} )
   [[ -n "$RES" ]] && BUFFER="$RES" && zle end-of-line
   zle reset-prompt
}
zle -N fzf-history-widget

fzf-files-widget() {
   local RES=$( fd -HI | fzf --height=11 --info=hidden --reverse --query="" )
   LBUFFER="$LBUFFER$RES"
   zle reset-prompt
}
zle -N fzf-files-widget

# Bindings
typeset -A key
key=(
   BackSpace  "${terminfo[kbs]}"
   Home       "${terminfo[khome]}"
   End        "${terminfo[kend]}"
   Insert     "${terminfo[kich1]}"
   Delete     "${terminfo[kdch1]}"
   Up         "${terminfo[kcuu1]}"
   Down       "${terminfo[kcud1]}"
   Left       "${terminfo[kcub1]}"
   Right      "${terminfo[kcuf1]}"
   PageUp     "${terminfo[kpp]}"
   PageDown   "${terminfo[knp]}"
)

bindkey "${key[Delete]}" delete-char
bindkey "${key[Home]}"   beginning-of-line
bindkey "${key[End]}"    end-of-line
bindkey "${key[Up]}"     up-line-or-search
bindkey "^[[A"           up-line-or-search
bindkey "${key[Down]}"   down-line-or-search
bindkey "^[[B"           down-line-or-search

bindkey '^R'             fzf-history-widget
bindkey '^F'             fzf-files-widget

# Others
stty stop undef       # Disable ctrl-s to freeze terminal.



#### Aliases
# Basics
alias   ls='ls --color=auto'
alias   ll='ls -lh'
alias   la='ls -lha'

# Git
alias    g='git'
alias   ga='git add'
alias  gaa='git add -A'
alias   gb='git branch'
alias  gba='git branch -a'
alias  gbr='git branch -r'
alias  gbd='git branch -d'
alias  gbD='git branch -D'
alias  gco='git checkout'
alias  gcm='git checkout master'
alias  gcb='git checkout -b'
alias   gc='git commit -v -m'
alias  gc!='git commit -v --no-edit --amend'
alias  gca='git commit -v -a -m'
alias gca!='git commit -v -a --no-edit --amend'
alias  gcf='git config --list'
alias   gd='git diff'
alias  gdc='git diff --cached'
alias  gds='git diff --staged'
alias   gf='git fetch'
alias  gfa='git fetch --all --prune'
alias  glo="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'"
alias   gm='git merge'
alias   gl='git pull'
alias   gp='git push'
alias  gpu='git push -u origin HEAD'
alias  grb='git rebase'
alias  grh='git reset'
alias grhh='git reset --hard'
alias  gsh='git show'
alias  gst='git status'

# Windows
alias  n='nnn -cod'
alias n0='NNN_OPENER="kak-launcher -c0" nnn -co'
alias n1='NNN_OPENER="kak-launcher -c1" nnn -co'

# Editor
alias kk='kak-launcher'
alias kq='kak-launcher -q'
alias k0='kak-launcher -c0'
alias k1='kak-launcher -c1'

# Configs
alias cfg='GIT_DIR=$XDG_CACHE_HOME/dotfiles GIT_WORK_TREE=$HOME'
alias config='cfg git'


ide() {
   hash -d $(basename $PWD)=$PWD
   PROMPT="%F{green}%~ \$(prompt_git_status)%f$ "
}

[[ -e "$HOME/.zshrc.local" ]] && . "$HOME/.zshrc.local"

